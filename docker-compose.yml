services:
  docker_postgresql:
      image: postgres:11
      container_name: docker_postgresql 
      environment:
          POSTGRES_USER: "postgres_user"
          POSTGRES_PASSWORD: "postgres_password"
          POSTGRES_DB: "postgres_db"
      #check the status of the database if it is ready to receive connections
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres_user -d postgres_db"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
      - etl_network
      
      

  python_program:
    build:
      context: . 
      dockerfile: ./python_program
    container_name: docker_python_code 
    image: docker_python_image 
    environment:
      PG_USERNAME: "postgres_user"
      PG_PASSWORD: "postgres_password"
      PG_DB: "postgres_db"
      DB_HOST: "docker_postgresql"
      CURRENT_IMAGE: "docker_python_image"
    #ensure the database is started and completed all initialisation tasks before
    #running python program
    depends_on:
      docker_postgresql:
        condition: service_healthy
    networks:
      - etl_network

    

networks:
  etl_network:
    driver: bridge
    name: etl_network